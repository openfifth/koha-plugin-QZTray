[% USE KohaDates %]
[% INCLUDE 'doc-head-open.inc' %]
<title>Configure QZ Tray Integration</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>
<body>
[% INCLUDE 'header.inc' %]
[% INCLUDE 'cat-search.inc' %]

<div id="breadcrumbs"><a href="/cgi-bin/koha/mainpage.pl">Home</a> &rsaquo; <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a> &rsaquo; QZ Tray Integration &rsaquo; Configure</div>

<div class="main container-fluid">
    <div class="row">
        <div class="col-sm-10 col-sm-push-2">
            <main>
                <h1>QZ Tray Integration Configuration</h1>
                
                [% IF encryption_error %]
                    <div class="alert alert-danger">
                        <h4>Encryption Configuration Required</h4>
                        <p>[% error_message | html %]</p>
                        <p>This plugin requires encryption to securely store certificates and private keys. Please contact your system administrator to configure encryption in Koha.</p>
                    </div>
                [% ELSIF errors %]
                    <div class="alert alert-danger">
                        <h4>Configuration errors:</h4>
                        <ul>
                            [% FOREACH error IN errors %]
                                <li>[% error | html %]</li>
                            [% END %]
                        </ul>
                    </div>
                [% END %]
                
                <div class="alert alert-info">
                    <h4>About QZ Tray Integration</h4>
                    <p>This plugin integrates QZ Tray printing functionality into Koha. You need to upload your digital certificate and private key files to enable secure communication with QZ Tray.</p>
                    <p>These files are typically provided when you set up QZ Tray for secure printing operations.</p>
                </div>
                
                <form method="post" enctype="multipart/form-data">
                    [% INCLUDE 'csrf-token.inc' %]
                    <input type="hidden" name="class" value="[% CLASS %]"/>
                    <input type="hidden" name="method" value="[% METHOD %]"/>
                    <input type="hidden" name="save" value="1" />
                    
                    <fieldset class="rows">
                        <legend>Certificate Configuration</legend>
                        <ol>
                            <li>
                                <label for="certificate_upload">Digital Certificate File:</label>
                                <input type="file" name="certificate_upload" id="certificate_upload" accept=".txt,.pem,.crt" />
                                [% IF certificate_file %]
                                    <div class="hint">Current certificate: Securely stored and encrypted</div>
                                [% ELSE %]
                                    <div class="hint">No certificate uploaded</div>
                                [% END %]
                            </li>
                            <li>
                                <label for="private_key_upload">Private Key File:</label>
                                <input type="file" name="private_key_upload" id="private_key_upload" accept=".key,.pem" />
                                [% IF private_key_file %]
                                    <div class="hint">Current private key: Securely stored and encrypted</div>
                                [% ELSE %]
                                    <div class="hint">No private key uploaded</div>
                                [% END %]
                            </li>
                        </ol>
                    </fieldset>
                    
                    <fieldset class="rows">
                        <legend>Printer Settings</legend>
                        <ol>
                            <li>
                                <label for="preferred_printer">Cash Drawer Printer:</label>
                                <select name="preferred_printer" id="preferred_printer">
                                    <option value="">Use system default printer</option>
                                    [% IF preferred_printer %]
                                        <option value="[% preferred_printer | html %]" selected="selected">[% preferred_printer | html %]</option>
                                    [% END %]
                                </select>
                                <button type="button" id="refresh_printers">Refresh Printer List</button>
                                <div class="hint">Select the printer connected to your cash drawer</div>
                                <div id="printer_status" class="hint"></div>
                            </li>
                        </ol>
                    </fieldset>
                    
                    
                    <fieldset class="action">
                        <input type="submit" value="Save configuration" />
                        <a class="cancel" href="/cgi-bin/koha/plugins/plugins-home.pl">Cancel</a>
                    </fieldset>
                </form>
            </main>
        </div>
        <div class="col-sm-2 col-sm-pull-10">
            [% INCLUDE 'tools-menu.inc' %]
        </div>
    </div>
</div>

<script type="text/javascript">
function documentReady(fn) {
    if (document.readyState !== 'loading') {
        fn();
    } else {
        document.addEventListener('DOMContentLoaded', fn);
    }
}

documentReady(function() {
    console.log('Configuration page ready');
    console.log('qz available:', typeof qz !== 'undefined');
    console.log('KEYUTIL available:', typeof KEYUTIL !== 'undefined');

    // Set up printer refresh functionality
    setupPrinterRefresh();

    function setupPrinterRefresh() {
        var refreshButton = document.getElementById('refresh_printers');
        if (refreshButton) {
            refreshButton.addEventListener('click', refreshPrinterList);
        }

        // Show initial status
        var statusElement = document.getElementById('printer_status');
        if (statusElement) {
            statusElement.textContent = 'Click "Refresh Printer List" to detect printers';
        }
    }

    function refreshPrinterList() {
        var statusElement = document.getElementById('printer_status');
        var refreshButton = document.getElementById('refresh_printers');

        if (statusElement) {
            statusElement.textContent = 'Connecting to QZ Tray...';
            statusElement.className = statusElement.className.replace(' error', '');
        }

        if (refreshButton) {
            refreshButton.disabled = true;
        }

        if (typeof qz === 'undefined') {
            if (statusElement) {
                statusElement.textContent = 'QZ Tray libraries not loaded. Please enable the plugin in the staff interface and try again.';
                statusElement.className += ' error';
            }
            if (refreshButton) {
                refreshButton.disabled = false;
            }
            return;
        }

        // Set up minimal QZ Tray configuration for printer detection
        qz.security.setCertificatePromise(function(resolve, reject) {
            resolve(''); // Empty certificate for printer detection
        });

        qz.security.setSignaturePromise(function(toSign) {
            return function(resolve, reject) {
                resolve(''); // Empty signature for printer detection
            };
        });

        qz.websocket.connect().then(function() {
            if (statusElement) {
                statusElement.textContent = 'Connected to QZ Tray, fetching printers...';
            }
            return qz.printers.find();
        }).then(function(printers) {
            updatePrinterList(printers);
            if (statusElement) {
                statusElement.textContent = 'Found ' + printers.length + ' printer(s)';
            }
        }).catch(function(error) {
            console.error('QZ Tray error:', error);
            if (statusElement) {
                statusElement.textContent = 'Error: ' + error.message;
                statusElement.className += ' error';
            }
        }).finally(function() {
            if (refreshButton) {
                refreshButton.disabled = false;
            }
            if (typeof qz !== 'undefined' && qz.websocket) {
                qz.websocket.disconnect();
            }
        });
    }

    function updatePrinterList(printers) {
        var select = document.getElementById('preferred_printer');
        if (!select) return;

        var currentValue = select.value;

        // Clear existing options except the default
        var options = select.querySelectorAll('option[value!=""]');
        options.forEach(function(option) {
            option.remove();
        });

        // Add printers to the list
        printers.forEach(function(printer) {
            var option = document.createElement('option');
            option.value = printer;
            option.textContent = printer;

            if (printer === currentValue) {
                option.selected = true;
            }

            select.appendChild(option);
        });
    }
});
</script>

[% INCLUDE 'intranet-bottom.inc' %]