[% USE KohaDates %]
[% INCLUDE 'doc-head-open.inc' %]
<title>Configure QZ Tray Integration</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>
<body>
[% INCLUDE 'header.inc' %]
[% INCLUDE 'cat-search.inc' %]

<div id="breadcrumbs"><a href="/cgi-bin/koha/mainpage.pl">Home</a> &rsaquo; <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a> &rsaquo; QZ Tray Integration &rsaquo; Configure</div>

<div class="main container-fluid">
    <div class="row">
        <div class="col-sm-10 col-sm-push-2">
            <main>
                <h1>QZ Tray Integration Configuration</h1>
                
                [% IF errors %]
                    <div class="alert alert-danger">
                        <h4>Configuration errors:</h4>
                        <ul>
                            [% FOREACH error IN errors %]
                                <li>[% error | html %]</li>
                            [% END %]
                        </ul>
                    </div>
                [% END %]
                
                <div class="alert alert-info">
                    <h4>About QZ Tray Integration</h4>
                    <p>This plugin integrates QZ Tray printing functionality into Koha. You need to upload your digital certificate and private key files to enable secure communication with QZ Tray.</p>
                    <p>These files are typically provided when you set up QZ Tray for secure printing operations.</p>
                </div>
                
                <form method="post" enctype="multipart/form-data">
                    [% INCLUDE 'csrf-token.inc' %]
                    <input type="hidden" name="class" value="[% CLASS %]"/>
                    <input type="hidden" name="method" value="[% METHOD %]"/>
                    <input type="hidden" name="save" value="1" />
                    
                    <fieldset class="rows">
                        <legend>Certificate Configuration</legend>
                        <ol>
                            <li>
                                <label for="certificate_upload">Digital Certificate File:</label>
                                <input type="file" name="certificate_upload" id="certificate_upload" accept=".txt,.pem,.crt" />
                                [% IF certificate_file %]
                                    <div class="hint">Current certificate: Uploaded ([% certificate_file.length %] bytes)</div>
                                [% ELSE %]
                                    <div class="hint">No certificate uploaded</div>
                                [% END %]
                            </li>
                            <li>
                                <label for="private_key_upload">Private Key File:</label>
                                <input type="file" name="private_key_upload" id="private_key_upload" accept=".key,.pem" />
                                [% IF private_key_file %]
                                    <div class="hint">Current private key: Uploaded ([% private_key_file.length %] bytes)</div>
                                [% ELSE %]
                                    <div class="hint">No private key uploaded</div>
                                [% END %]
                            </li>
                        </ol>
                    </fieldset>
                    
                    <fieldset class="rows">
                        <legend>Printer Settings</legend>
                        <ol>
                            <li>
                                <label for="preferred_printer">Cash Drawer Printer:</label>
                                <select name="preferred_printer" id="preferred_printer">
                                    <option value="">Use system default printer</option>
                                    [% IF preferred_printer %]
                                        <option value="[% preferred_printer | html %]" selected="selected">[% preferred_printer | html %]</option>
                                    [% END %]
                                </select>
                                <button type="button" id="refresh_printers">Refresh Printer List</button>
                                <div class="hint">Select the printer connected to your cash drawer</div>
                                <div id="printer_status" class="hint"></div>
                            </li>
                        </ol>
                    </fieldset>
                    
                    <fieldset class="rows">
                        <legend>Interface Settings</legend>
                        <ol>
                            <li>
                                <label for="enable_staff">Enable in Staff Interface:</label>
                                <input type="checkbox" name="enable_staff" id="enable_staff" value="1" [% IF enable_staff %]checked="checked"[% END %] />
                                <div class="hint">Load QZ Tray JavaScript in the staff/intranet interface</div>
                            </li>
                            <li>
                                <label for="enable_opac">Enable in OPAC:</label>
                                <input type="checkbox" name="enable_opac" id="enable_opac" value="1" [% IF enable_opac %]checked="checked"[% END %] />
                                <div class="hint">Load QZ Tray JavaScript in the public catalog (OPAC)</div>
                            </li>
                        </ol>
                    </fieldset>
                    
                    <fieldset class="action">
                        <input type="submit" value="Save configuration" />
                        <a class="cancel" href="/cgi-bin/koha/plugins/plugins-home.pl">Cancel</a>
                    </fieldset>
                </form>
            </main>
        </div>
        <div class="col-sm-2 col-sm-pull-10">
            [% INCLUDE 'tools-menu.inc' %]
        </div>
    </div>
</div>

<script type="text/javascript">
$(document).ready(function() {
    console.log('Configuration page ready');
    console.log('qz available:', typeof qz !== 'undefined');
    console.log('KEYUTIL available:', typeof KEYUTIL !== 'undefined');
    
    // Set up printer refresh functionality
    setupPrinterRefresh();
    
    function setupPrinterRefresh() {
        $('#refresh_printers').click(function() {
            refreshPrinterList();
        });
        
        // Show initial status
        $('#printer_status').text('Click "Refresh Printer List" to detect printers');
    }
    
    function refreshPrinterList() {
        $('#printer_status').text('Connecting to QZ Tray...').removeClass('error');
        $('#refresh_printers').prop('disabled', true);
        
        if (typeof qz === 'undefined') {
            $('#printer_status').text('QZ Tray libraries not loaded. Please enable the plugin in the staff interface and try again.').addClass('error');
            $('#refresh_printers').prop('disabled', false);
            return;
        }
        
        // Set up minimal QZ Tray configuration for printer detection
        qz.security.setCertificatePromise(function(resolve, reject) {
            resolve(''); // Empty certificate for printer detection
        });
        
        qz.security.setSignaturePromise(function(toSign) {
            return function(resolve, reject) {
                resolve(''); // Empty signature for printer detection
            };
        });
        
        qz.websocket.connect().then(function() {
            $('#printer_status').text('Connected to QZ Tray, fetching printers...');
            return qz.printers.find();
        }).then(function(printers) {
            updatePrinterList(printers);
            $('#printer_status').text('Found ' + printers.length + ' printer(s)');
        }).catch(function(error) {
            console.error('QZ Tray error:', error);
            $('#printer_status').text('Error: ' + error.message).addClass('error');
        }).finally(function() {
            $('#refresh_printers').prop('disabled', false);
            if (typeof qz !== 'undefined' && qz.websocket) {
                qz.websocket.disconnect();
            }
        });
    }
    
    function updatePrinterList(printers) {
        var $select = $('#preferred_printer');
        var currentValue = $select.val();
        
        // Clear existing options except the default
        $select.find('option:not([value=""])').remove();
        
        // Add printers to the list
        printers.forEach(function(printer) {
            var $option = $('<option></option>')
                .attr('value', printer)
                .text(printer);
            
            if (printer === currentValue) {
                $option.prop('selected', true);
            }
            
            $select.append($option);
        });
    }
});
</script>

[% INCLUDE 'intranet-bottom.inc' %]