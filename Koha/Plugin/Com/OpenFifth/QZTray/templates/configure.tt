[% USE raw %]
[% USE Asset %]
[% USE KohaDates %]
[% PROCESS 'i18n.inc' %]
[% SET footerjs = 1 %]
[% INCLUDE 'doc-head-open.inc' %]
<title>[% FILTER collapse %]
    [% t("QZ Tray Integration") | html %] &rsaquo;
    [% t("Plugins") | html %] &rsaquo;
    [% t("Koha") | html %]
[% END %]</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>
<body id="plugins_qztray_configure" class="plugins">
[% WRAPPER 'header.inc' %]
    [% INCLUDE 'cat-search.inc' %]
[% END %]

[% WRAPPER 'sub-header.inc' %]
    [% WRAPPER breadcrumbs %]
        [% WRAPPER breadcrumb_item %]
            <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a>
        [% END %]
        [% WRAPPER breadcrumb_item %]
            <a href="/cgi-bin/koha/plugins/run.pl?class=[% CLASS | uri %]&method=report">QZ Tray Integration</a>
        [% END %]
        [% WRAPPER breadcrumb_item bc_active= 1 %]
            <span>Configuration</span>
        [% END %]
    [% END #/ WRAPPER breadcrumbs %]
[% END #/ WRAPPER sub-header.inc %]

<div id="main container-fluid">
    <div class="row">
        <div class="col-md-10 order-md-2 order-sm-1">
            <main>
                <h1>QZ Tray Integration Configuration</h1>

                [% IF dependency_warning %]
                    <div class="alert alert-warning">
                        <h4>Optional Server Dependencies Missing</h4>
                        <p>[% dependency_message | html %]</p>
                        <div class="alert alert-info" style="margin-top: 15px;">
                            <strong>Plugin Status:</strong> This plugin is functional for basic cash drawer operations, but certificate management is disabled.
                            For production use with secure certificate authentication, install the server dependencies above.
                        </div>
                    </div>
                [% ELSIF encryption_error %]
                    <div class="alert alert-danger">
                        <h4>Encryption Configuration Required</h4>
                        <p>[% error_message | html %]</p>
                        <p>This plugin requires encryption to securely store certificates and private keys. Please contact your system administrator to configure encryption in Koha.</p>
                    </div>
                [% ELSIF errors %]
                    <div class="alert alert-danger">
                        <h4>Configuration errors:</h4>
                        <ul>
                            [% FOREACH error IN errors %]
                                <li>[% error | html %]</li>
                            [% END %]
                        </ul>
                    </div>
                [% END %]
                
                <div class="alert alert-info">
                    <h4>About QZ Tray Integration</h4>
                    <p>This plugin integrates QZ Tray printing functionality into Koha for automatic cash drawer opening.</p>
                    <p><strong>Development/Testing:</strong> The plugin works immediately without certificates - QZ Tray will prompt users to trust the connection.</p>
                    <p><strong>Production Use:</strong> Upload your digital certificate and private key files for secure, automatic communication with QZ Tray without user prompts.</p>
                </div>
                
                <form method="post" enctype="multipart/form-data">
                    [% INCLUDE 'csrf-token.inc' %]
                    <input type="hidden" name="class" value="[% CLASS %]"/>
                    <input type="hidden" name="method" value="[% METHOD %]"/>
                    <input type="hidden" name="save" value="1" />

                    <fieldset>
                        <legend>
                            Certificate Configuration
                            [% IF !openssl_available %]
                                <small class="text-muted">(Disabled - Server Dependencies Missing)</small>
                            [% END %]
                        </legend>
                    
                        [% IF !openssl_available %]
                            <div class="alert alert-info">
                                <strong>Certificate uploads are disabled</strong> because required server libraries are not installed. 
                                The plugin will work in development mode without certificates, but for production security you should 
                                install the missing dependencies.
                            </div>
                        [% END %]
                    
                        <div class="mb-3">
                            <label for="certificate_upload" class="form-label">Digital Certificate File</label>
                            <input class="form-control" type="file" name="certificate_upload" id="certificate_upload"
                                   accept=".pem,.crt,.txt" [% IF !openssl_available %]disabled="disabled"[% END %] />
                            <div class="form-text">
                                [% IF !openssl_available %]
                                    Certificate upload disabled – install server dependencies to enable.
                                [% ELSIF certificate_file %]
                                    <span class="badge bg-success">Present</span> Current certificate is securely stored and encrypted.
                                    [% IF certificate_upload_date %]
                                        <br><small class="text-muted">Uploaded: [% certificate_upload_date | $KohaDates %]</small>
                                    [% END %]
                                    [% IF certificate_expiry_date %]
                                        <br><small class="text-muted">
                                            Expires: [% certificate_expiry_date | $KohaDates %]
                                            [% IF certificate_expires_soon %]
                                                <span class="badge bg-warning ms-1">Expires Soon</span>
                                            [% ELSIF certificate_expired %]
                                                <span class="badge bg-danger ms-1">Expired</span>
                                            [% END %]
                                        </small>
                                    [% END %]
                                [% ELSE %]
                                    <span class="badge bg-danger">Not uploaded</span> No certificate currently uploaded.
                                [% END %]
                            </div>
                        </div>
                    
                        <div class="mb-3">
                            <label for="private_key_upload" class="form-label">Private Key File</label>
                            <input class="form-control" type="file" name="private_key_upload" id="private_key_upload"
                                   accept=".pem,.key" [% IF !openssl_available %]disabled="disabled"[% END %] />
                            <div class="form-text">
                                [% IF !openssl_available %]
                                    Private key upload disabled – install server dependencies to enable.
                                [% ELSIF private_key_file %]
                                    <span class="badge bg-success">Present</span> Current private key is securely stored and encrypted.
                                    [% IF private_key_upload_date %]
                                        <br><small class="text-muted">Uploaded: [% private_key_upload_date | $KohaDates %]</small>
                                    [% END %]
                                [% ELSE %]
                                    <span class="badge bg-danger">Not uploaded</span> No private key currently uploaded.
                                [% END %]
                            </div>
                        </div>
                    </fieldset>

                    [% IF registers_by_library && registers_by_library.size > 0 %]
                    <fieldset>
                        <legend>Printer Settings</legend>
                        <div class="form-text mb-3">Configure printers for each cash register. If no printer is specified, the system default printer will be used.</div>

                        [% IF current_register_id %]
                        <div class="alert alert-info mb-3">
                            <strong>Current Session Register:</strong> You are currently configured to use register ID [% current_register_id | html %]
                        </div>
                        [% END %]

                        <div class="mb-3">
                            <button type="button" class="btn btn-secondary" id="refresh_printers">Refresh Printer List</button>
                            <div id="printer_status" class="form-text d-inline-block ms-2"></div>
                        </div>

                        [% FOREACH library_code IN registers_by_library.keys.sort %]
                        [% library_registers = registers_by_library.$library_code %]
                        [% first_register = library_registers.0 %]

                        <fieldset class="border rounded p-3 mb-4">
                            <legend class="fw-bold text-dark fs-6 px-2">
                                [% first_register.library.branchname | html %]
                                ([% library_code | html %])
                                [% IF library_code == current_library_id %]
                                    <span class="text-success fw-normal"> - Your Current Library</span>
                                [% END %]
                            </legend>

                            <div class="list-group">
                                [% FOREACH register IN library_registers %]
                                <div class="mb-3[% IF register.is_current %] bg-light p-2 rounded[% END %]">
                                    <label for="register_printer_[% register.id %]" class="form-label">
                                        [% register.name | html %] ([% register.description | html %])
                                        [% IF register.is_current %]
                                            <span class="badge bg-success ms-2">Current Session Register</span>
                                        [% END %]
                                    </label>
                                    <input type="hidden" name="register_id" value="[% register.id %]" />
                                    <select name="register_printer" id="register_printer_[% register.id %]" class="form-select register_printer_select">
                                        <option value="">Use system default printer</option>
                                        [% IF register_mappings.${register.id} %]
                                            <option value="[% register_mappings.${register.id} | html %]" selected="selected">[% register_mappings.${register.id} | html %]</option>
                                        [% END %]
                                    </select>
                                </div>
                                [% END %]
                            </div>
                        </fieldset>
                        [% END %]
                    </fieldset>
                    [% ELSE %]
                    <div class="alert alert-info">
                        <h4>No Cash Registers Found</h4>
                        <p>No cash registers are configured for any library. Please contact your system administrator to set up cash registers before configuring printers.</p>
                    </div>
                    [% END %]
                    
                    
                    <fieldset class="action">
                        <input type="submit" class="btn btn-primary" value="Save configuration" />
                        <a class="btn btn-secondary ms-2" href="/cgi-bin/koha/plugins/plugins-home.pl">Cancel</a>
                    </fieldset>
                </form>
            </main>
        </div>
        <div class="col-md-2 order-sm-2 order-md-1">
            <aside></aside>
        </div>
    </div>
</div>

<script type="text/javascript">
function documentReady(fn) {
    if (document.readyState !== 'loading') {
        fn();
    } else {
        document.addEventListener('DOMContentLoaded', fn);
    }
}

documentReady(function() {
    console.log('Configuration page ready');
    console.log('qz available:', typeof qz !== 'undefined');
    console.log('KEYUTIL available:', typeof KEYUTIL !== 'undefined');

    // Set up printer refresh functionality
    setupPrinterRefresh();

    function setupPrinterRefresh() {
        var refreshButton = document.getElementById('refresh_printers');
        if (refreshButton) {
            refreshButton.addEventListener('click', refreshPrinterList);
        }

        // Show initial status
        var statusElement = document.getElementById('printer_status');
        if (statusElement) {
            statusElement.textContent = 'Click "Refresh Printer List" to detect printers';
        }
    }

    function refreshPrinterList() {
        var statusElement = document.getElementById('printer_status');
        var refreshButton = document.getElementById('refresh_printers');

        if (statusElement) {
            statusElement.textContent = 'Connecting to QZ Tray...';
            statusElement.className = statusElement.className.replace(' error', '');
        }

        if (refreshButton) {
            refreshButton.disabled = true;
        }

        if (typeof qz === 'undefined') {
            if (statusElement) {
                statusElement.textContent = 'QZ Tray libraries not loaded. Please enable the plugin in the staff interface and try again.';
                statusElement.className += ' error';
            }
            if (refreshButton) {
                refreshButton.disabled = false;
            }
            return;
        }

        // Set up minimal QZ Tray configuration for printer detection
        qz.security.setCertificatePromise(function(resolve, reject) {
            resolve(''); // Empty certificate for printer detection
        });

        qz.security.setSignaturePromise(function(toSign) {
            return function(resolve, reject) {
                resolve(''); // Empty signature for printer detection
            };
        });

        qz.websocket.connect().then(function() {
            if (statusElement) {
                statusElement.textContent = 'Connected to QZ Tray, fetching printers...';
            }
            return qz.printers.find();
        }).then(function(printers) {
            updatePrinterList(printers);
            if (statusElement) {
                statusElement.textContent = 'Found ' + printers.length + ' printer(s)';
            }
        }).catch(function(error) {
            console.error('QZ Tray error:', error);
            if (statusElement) {
                statusElement.textContent = 'Error: ' + error.message;
                statusElement.className += ' error';
            }
        }).finally(function() {
            if (refreshButton) {
                refreshButton.disabled = false;
            }
            if (typeof qz !== 'undefined' && qz.websocket) {
                qz.websocket.disconnect();
            }
        });
    }

    function updatePrinterList(printers) {
        // Update all register-specific printer selects
        var registerSelects = document.querySelectorAll('.register_printer_select');
        registerSelects.forEach(function(select) {
            updateSinglePrinterSelect(select, printers);
        });
    }

    function updateSinglePrinterSelect(select, printers) {
        var currentValue = select.value;

        // Clear existing options except the default
        var options = select.querySelectorAll('option[value!=""]');
        options.forEach(function(option) {
            option.remove();
        });

        // Add printers to the list
        printers.forEach(function(printer) {
            var option = document.createElement('option');
            option.value = printer;
            option.textContent = printer;

            if (printer === currentValue) {
                option.selected = true;
            }

            select.appendChild(option);
        });
    }
});
</script>

[% INCLUDE 'intranet-bottom.inc' %]
